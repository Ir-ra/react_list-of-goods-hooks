{"version":3,"sources":["App.tsx","components/Goods.tsx","index.tsx"],"names":["Sort_By","Goods","goods","map","good","goodsFromServer","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","sortType","preparedGoods","reverse","sort","good1","good2","alphabet","localeCompare","length","getPreparedGoods","className","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAqBKA,E,0ECfQC,EAAyB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACpC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,SDJAC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAIGL,K,gBAAAA,E,2BAAAA,M,KAsCE,IAAMM,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EApCR,SACEV,EACAW,EACAH,GAEA,IAAMI,EAAa,YAAOZ,GAE1B,OAAKW,GAAYH,EACRI,EAAcC,WAGnBF,GACFC,EAAcE,MAAK,SAACC,EAAOC,GACzB,OAAQL,GACN,KAAKb,EAAQmB,SACX,OAAOT,EACHQ,EAAME,cAAcH,GACpBA,EAAMG,cAAcF,GAE1B,KAAKlB,EAAQqB,OACX,OAAOX,EACHQ,EAAMG,OAASJ,EAAMI,OACrBJ,EAAMI,OAASH,EAAMG,OAE3B,QACE,OAAO,MAKRP,GAMcQ,CACnBjB,EACAG,EACAE,GAQF,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBACpBjB,IAAcR,EAAQmB,SAAW,GAAK,YACxCO,QAAS,kBAAMjB,EAAaT,EAAQmB,WAJtC,iCASA,wBACEK,KAAK,SACLD,UAAWE,IAAW,iBACpBjB,IAAcR,EAAQqB,OAAS,GAAK,YACtCK,QAAS,kBAAMjB,EAAaT,EAAQqB,SAJtC,4BASA,wBACEG,KAAK,SACLD,UAAWE,IAAW,oBACpBf,EAAa,GAAK,YACpBgB,QAAS,kBAAMf,GAAeD,IAJhC,sBASEF,GAAaE,IACb,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAvCV,WACEjB,EAAa,IACbE,GAAc,IAkCR,sBAUJ,cAAC,EAAD,CAAOT,MAAOU,QE/GpBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8564ad5a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport classNames from 'classnames';\nimport { Goods } from './components/Goods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nenum Sort_By {\n  length = 'length',\n  alphabet = 'alphabetically',\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  sortType: Sort_By,\n  isReversed: boolean,\n) {\n  const preparedGoods = [...goods];\n\n  if (!sortType && isReversed) {\n    return preparedGoods.reverse();\n  }\n\n  if (sortType) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case Sort_By.alphabet:\n          return isReversed\n            ? good2.localeCompare(good1)\n            : good1.localeCompare(good2);\n\n        case Sort_By.length:\n          return isReversed\n            ? good2.length - good1.length\n            : good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    sortField as Sort_By,\n    isReversed,\n  );\n\n  function reset() {\n    setSortField('');\n    setIsReversed(false);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info',\n            sortField === Sort_By.alphabet ? '' : 'is-light')}\n          onClick={() => setSortField(Sort_By.alphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-info',\n            sortField === Sort_By.length ? '' : 'is-light')}\n          onClick={() => setSortField(Sort_By.length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning',\n            isReversed ? '' : 'is-light')}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n      <Goods goods={visibleGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const Goods: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        data-cy=\"Good\"\n        key={good}\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}